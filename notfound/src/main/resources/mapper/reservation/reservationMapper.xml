<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.office.notfound.reservation.model.dao.ReservationMapper">

    <resultMap id="reservationResultMap" type="com.office.notfound.reservation.model.dto.ReservationDTO">
        <result property="reservationCode" column="reservation_code"/>
        <result property="memberCode" column="member_code"/>
        <result property="storeName" column="storeName"/>
        <result property="startDatetime" column="start_datetime"/>
        <result property="endDatetime" column="end_datetime"/>
        <result property="totalPrice" column="total_price"/>
        <result property="reservationStatus" column="reservation_status"/>
    </resultMap>

    <!-- 🔹 로그인한 사용자의 예약 전체 조회 -->
    <select id="findAllReservationByMember" resultMap="reservationResultMap">
        SELECT
            r.reservation_code,
            r.member_code,
            CONCAT(s.store_name, '(', o.office_num, ')') AS storeName,
            r.start_datetime,
            r.end_datetime,
            r.total_price,
            r.reservation_status
        FROM
            tbl_reservation r
                JOIN tbl_office o ON r.office_code = o.office_code
                JOIN tbl_store s ON o.store_code = s.store_code
        WHERE
            r.member_code = #{memberCode}
        ORDER BY
            r.reservation_code DESC;
    </select>

    <!-- 🔹 로그인한 사용자의 특정 예약 검색 -->
    <select id="searchReservationByMember" resultMap="reservationResultMap">
        SELECT
        r.reservation_code,
        r.member_code,
        CONCAT(s.store_name, '(', o.office_num, ')') AS storeName,
        r.start_datetime,
        r.end_datetime,
        r.total_price,
        r.reservation_status
        FROM
        tbl_reservation r
        JOIN tbl_office o ON r.office_code = o.office_code
        JOIN tbl_store s ON o.store_code = s.store_code
        WHERE
        r.member_code = #{memberCode}
        <if test="reservationCode != null">
            AND reservation_code = #{reservationCode}
        </if>
        <if test="reservationDate != null and reservationDate != ''">
            AND DATE_FORMAT(start_datetime, '%Y-%m-%d') = #{reservationDate}
        </if>
        <if test="startDatetime != null and startDatetime != ''">
            AND start_datetime >= #{startDatetime}
        </if>
        <if test="endDatetime != null and endDatetime != ''">
            <![CDATA[ AND DATE_FORMAT(end_datetime, '%Y-%m-%d') < #{endDatetime} ]]>
        </if>
        ORDER BY
        r.reservation_code DESC;
    </select>

    <!-- 🔹 관리자: 모든 예약 조회 -->
    <select id="adminFindAllReservation" resultMap="reservationResultMap">
        SELECT
            r.reservation_code,
            r.member_code,
            CONCAT(s.store_name, '(', o.office_num, ')') AS storeName,
            r.start_datetime,
            r.end_datetime,
            r.total_price,
            r.reservation_status
        FROM
            tbl_reservation r
                JOIN tbl_office o ON r.office_code = o.office_code
                JOIN tbl_store s ON o.store_code = s.store_code
        ORDER BY
            r.reservation_code DESC;
    </select>

    <!-- 🔹 관리자: 특정 조건으로 예약 검색 -->
    <select id="searchAdminReservation" resultMap="reservationResultMap">
        SELECT
        r.reservation_code,
        r.member_code,
        CONCAT(s.store_name, '(', o.office_num, ')') AS storeName,
        r.start_datetime,
        r.end_datetime,
        r.total_price,
        r.reservation_status
        FROM
        tbl_reservation r
        JOIN tbl_office o ON r.office_code = o.office_code
        JOIN tbl_store s ON o.store_code = s.store_code
        WHERE
        1 = 1
        <if test="reservationCode != null">
            AND reservation_code = #{reservationCode}
        </if>
        <if test="memberCode != null">
            AND member_code = #{memberCode}
        </if>
        <if test="reservationDate != null and reservationDate != ''">
            AND DATE_FORMAT(start_datetime, '%Y-%m-%d') = #{reservationDate}
        </if>
        <if test="startDatetime != null and startDatetime != ''">
            AND start_datetime >= #{startDatetime}
        </if>
        <if test="endDatetime != null and endDatetime != ''">
            <![CDATA[ AND DATE_FORMAT(end_datetime, '%Y-%m-%d') < #{endDatetime} ]]>
        </if>
        ORDER BY
        r.reservation_code DESC;
    </select>

    <!-- 🔹 회원 예약 취소 -->
    <update id="cancelReservationsByMember">
        UPDATE tbl_reservation
        SET reservation_status = '예약취소'
        WHERE reservation_code IN
        <foreach item="code" collection="reservationCodes" open="(" separator="," close=")">
            #{code}
        </foreach>
        AND member_code = #{memberCode};
    </update>

    <!-- 🔹 관리자: 특정 예약 취소 -->
    <update id="cancelReservationsByAdmin">
        UPDATE tbl_reservation
        SET reservation_status = '예약취소'
        WHERE reservation_code IN
        <foreach item="code" collection="reservationCodes" open="(" separator="," close=")">
            #{code}
        </foreach>;
    </update>

    <!-- 🔹 일정 기간 지난 '예약취소' 상태의 예약 자동 삭제 -->
    <delete id="deleteOldCanceledReservations">
        DELETE FROM tbl_reservation
        WHERE reservation_status = '예약취소'
          AND <![CDATA[ DATE_ADD(start_datetime, INTERVAL 30 DAY) < NOW() ]]>;
    </delete>

    <!-- 🔹 관리자: '예약취소' 상태인 예약을 삭제 -->
    <delete id="deleteReservations">
        DELETE FROM tbl_reservation
        WHERE reservation_code IN
        <foreach item="code" collection="reservationCodes" open="(" separator="," close=")">
            #{code}
        </foreach>
        AND reservation_status = '예약취소';
    </delete>

    <!-- 🔹 예약 상태 업데이트 -->
    <update id="updateReservationStatus">
        UPDATE tbl_reservation 
        SET reservation_status = #{status}
        WHERE reservation_code = #{reservationCode}
    </update>

    <!-- 예약된 시간대 조회 -->
    <select id="findBookedTimeSlots" resultType="string">
        SELECT DATE_FORMAT(start_datetime, '%H:00') as booked_time
        FROM tbl_reservation
        WHERE office_code = #{officeCode}
          AND DATE(start_datetime) = #{date}
          AND reservation_status != '예약취소'
    </select>

    <!-- 시간대 중복 체크 -->
    <select id="checkTimeSlotAvailability" resultType="boolean">
        SELECT COUNT(*) = 0
        FROM tbl_reservation
        WHERE office_code = #{officeCode}
        AND reservation_status != '예약취소'
        AND (
            (start_datetime BETWEEN #{startDatetime} AND #{endDatetime})
            OR (end_datetime BETWEEN #{startDatetime} AND #{endDatetime})
        <![CDATA[ OR (start_datetime <= #{startDatetime} AND end_datetime >= #{endDatetime})]]>
        )
    </select>

    <!-- 예약 등록 -->
    <insert id="insertReservation" parameterType="com.office.notfound.reservation.model.dto.ReservationDTO">
        INSERT INTO tbl_reservation (
        member_code,
        office_code,
        start_datetime,
        end_datetime,
        total_price,
        reservation_status
        ) VALUES (
        #{memberCode},
        #{officeCode},
        #{startDatetime},
        #{endDatetime},
        #{totalPrice},
        COALESCE(#{reservationStatus}, '예약완료')
        )
    </insert>

    <!-- 예약 코드로 예약 정보 조회 -->
    <select id="selectReservationByCode" resultMap="reservationResultMap">
        SELECT
            r.reservation_code,
            r.member_code,
            r.office_code,
            CONCAT(s.store_name, '(', o.office_num, ')') AS storeName,
            r.start_datetime,
            r.end_datetime,
            r.total_price,
            r.reservation_status
        FROM
            tbl_reservation r
            JOIN tbl_office o ON r.office_code = o.office_code
            JOIN tbl_store s ON o.store_code = s.store_code
        WHERE
            r.reservation_code = #{reservationCode}
    </select>

    <!-- 예약 정보 수정 -->
    <update id="updateReservation" parameterType="com.office.notfound.reservation.model.dto.ReservationDTO">
        UPDATE tbl_reservation
        SET
            office_code = #{officeCode},
            start_datetime = #{startDatetime},
            end_datetime = #{endDatetime},
            total_price = #{totalPrice},
            reservation_status = #{reservationStatus}
        WHERE
            reservation_code = #{reservationCode}
    </update>
</mapper>
